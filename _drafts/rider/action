   //every action can take action with arg
   //FakeChangeToken is better than FakeChangeToken1
    public class FakeChangeToken : IChangeToken, IDisposable
    {
        public bool ActiveChangeCallbacks { get; set; }
        public bool HasChanged { get; set; }

              public IDisposable RegisterChangeCallback(Action<object> callback, object state)
        {
            _callback = () => callback(state);
      
            return this;
        }

        public void InvokeChangeCallback()
        {
            _callback?.Invoke();
        }

        public void Dispose()
        {
            _callback = null;
        }
        private Action _callback;
    }




 public class FakeChangeToken1 :IDisposable
{
    private object _state;
    public IDisposable RegisterChangeCallback(Action<object> callback, object state)
    {
      
        _state= state;
        _dummycallback =(s) => callback(s);
         return this;
    }

    public void InvokeChangeCallback()
    {
        
        _dummycallback(_state);
    }

    public void Dispose()
    {
        _dummycallback = null;
    }

    
    private Action<object> _dummycallback;